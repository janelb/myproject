<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libang.erp.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.libang.erp.entity.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="tell" jdbcType="VARCHAR" property="tell" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="permission_id" jdbcType="INTEGER" property="permissionId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, employee_name, role_id, tell, password, permission_id, create_time, state
  </sql>
  <select id="selectByExample" parameterType="com.libang.erp.entity.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.libang.erp.entity.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.libang.erp.entity.Employee">
    insert into employee (id, employee_name, role_id, 
      tell, password, permission_id, 
      create_time, state)
    values (#{id,jdbcType=INTEGER}, #{employeeName,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
      #{tell,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{permissionId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.libang.erp.entity.Employee" useGeneratedKeys="true" keyProperty="id">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="tell != null">
        tell,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="tell != null">
        #{tell,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.libang.erp.entity.EmployeeExample" resultType="java.lang.Long">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>


  <!--查询所有员工的List集合-->
  <!--<select id="findAllWithRole"  resultMap="employeeWithRoleMap">
            SELECT
                   employee.*, role.id AS roleId,
                   role.role_name,
                   role.role_code,
                   role.create_time,
                   role.update_time
               FROM
                   employee
               LEFT JOIN employee_role ON employee.id = employee_role.employee_id
               LEFT JOIN role ON employee_role.role_id = role.id
               ORDER BY
             employee.id DESC
   </select>-->


  <!--带有条件查询-->
  <select id="findAllAccountWithRolesByQueryParam" resultMap="employeeWithRoleMap">
                SELECT
                    employee.*, role.id AS roleId,
                    role.role_name,
                    role.role_code,
                    role.create_time,
                    role.update_time
                FROM
                    employee
                LEFT JOIN employee_role ON employee.id = employee_role.employee_id
                LEFT JOIN role ON employee_role.role_id = role.id
                <choose>
                  <when test="roleId !=0 and roleId !=null">
                    INNER JOIN(
                    SELECT
                    employee.id
                    FROM
                    employee
                    INNER JOIN employee_role
                    on employee.id = employee_role.employee_id
                    <where>
                        employee_role.role_id=#{roleId}
                      <if test="nameMobile !=null and nameMobile !=''">
                        and (employee.employee_name LIKE CONCAT('%',#{nameMobile},'%')
                        or (employee.tell LIKE CONCAT('%',#{nameMobile},'%')))
                      </if>
                    </where>
                    ) as temp  on employee.id=temp.id
                  </when>
                    <otherwise>
                      <where>
                        <if test="nameMobile !=null and nameMobile !=''">
                          (employee.employee_name LIKE CONCAT('%',#{nameMobile},'%'))
                          or (employee.tell LIKE CONCAT('%',#{nameMobile},'%'))
                        </if>
                      </where>
                    </otherwise>
                </choose>
                ORDER BY employee.id DESC
  </select>

  <!--查找对应员工角色集合-->
    <select id="findByRoleList" resultType="com.libang.erp.entity.Role">
                  SELECT
                          *
                      FROM
                          employee_role
                      LEFT JOIN role ON employee_role.role_id = role.id
                      WHERE
                employee_id = #{employeeId}

    </select>


    <resultMap id="employeeWithRoleMap" type="com.libang.erp.entity.Employee" extends="BaseResultMap">
    <collection property="roleList" ofType="com.libang.erp.entity.Role">
      <id property="id" column="roleId"/>
      <result property="updateTime" column="update_time"/>
      <result property="createTime" column="create_time"/>
      <result property="roleName" column="role_name"/>
      <result property="roleCode" column="role_code"/>
    </collection>
  </resultMap>





    <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.employeeName != null">
        employee_name = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.tell != null">
        tell = #{record.tell,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.permissionId != null">
        permission_id = #{record.permissionId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set id = #{record.id,jdbcType=INTEGER},
      employee_name = #{record.employeeName,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      tell = #{record.tell,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      permission_id = #{record.permissionId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.libang.erp.entity.Employee">
    update employee
    <set>
      <if test="employeeName != null">
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="tell != null">
        tell = #{tell,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libang.erp.entity.Employee">
    update employee
    set employee_name = #{employeeName,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      tell = #{tell,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      permission_id = #{permissionId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>