<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libang.erp.mapper.PartsInMapper">
  <resultMap id="BaseResultMap" type="com.libang.erp.entity.PartsIn">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parts_id" jdbcType="INTEGER" property="partsId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parts_id, num, create_time, employee_id
  </sql>
  <select id="selectByExample" parameterType="com.libang.erp.entity.PartsInExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from parts_in
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from parts_in
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from parts_in
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.libang.erp.entity.PartsInExample">
    delete from parts_in
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.libang.erp.entity.PartsIn">
    insert into parts_in (id, parts_id, num, 
      create_time, employee_id)
    values (#{id,jdbcType=INTEGER}, #{partsId,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{employeeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.libang.erp.entity.PartsIn">
    insert into parts_in
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="partsId != null">
        parts_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="partsId != null">
        #{partsId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.libang.erp.entity.PartsInExample" resultType="java.lang.Long">
    select count(*) from parts_in
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <!--配件入库订单流水-->
  <select id="findPartsInInventory"  resultMap="partsInMap">
      SELECT
            parts_in.parts_id,
            parts_in.num,
            parts_in.create_time,
            parts.parts_no,
            parts.parts_name,
            parts.inventory,
            employee.employee_name
        FROM
            parts_in
        LEFT JOIN parts ON parts_in.parts_id = parts.id
        LEFT JOIN employee ON parts_in.employee_id = employee.id
        <where>
          <if test="partsNo != null and partsNo != ''">
            and   parts.parts_no = #{partsNo}
          </if>
        </where>
  </select>
  <resultMap id="partsInMap" type="com.libang.erp.entity.PartsIn" extends="BaseResultMap">
      <collection property="parts" ofType="com.libang.erp.entity.Parts">
        <id column="id"  property="id" />
        <result column="parts_no"  property="partsNo" />
        <result column="parts_name"  property="partsName" />
        <result column="in_price"  property="inPrice" />
        <result column="sale_price"  property="salePrice" />
        <result column="inventory"  property="inventory" />
        <result column="type_id"  property="typeId" />
        <result column="address"  property="address" />

      </collection>
      <collection property="employee" ofType="com.libang.erp.entity.Employee">
        <id column="id"  property="id" />
        <result column="employee_name"  property="employeeName" />
        <result column="role_id" property="roleId" />
        <result column="tell"  property="tell" />
        <result column="password"  property="password" />
        <result column="permission_id"  property="permissionId" />
        <result column="create_time"  property="createTime" />
        <result column="state"  property="state" />

      </collection>
  </resultMap>
  <update id="updateByExampleSelective" parameterType="map">
    update parts_in
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.partsId != null">
        parts_id = #{record.partsId,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update parts_in
    set id = #{record.id,jdbcType=INTEGER},
      parts_id = #{record.partsId,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      employee_id = #{record.employeeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.libang.erp.entity.PartsIn">
    update parts_in
    <set>
      <if test="partsId != null">
        parts_id = #{partsId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libang.erp.entity.PartsIn">
    update parts_in
    set parts_id = #{partsId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      employee_id = #{employeeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>